name: Test Unity Games

on:
  push:
    branches: [ main ]

jobs:
    testAllModes:
        name: Test in ${{ matrix.testMode }}
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                projectPath:
                    - TestRunnerGame
                targetPlatform:
                    - playmode
                    - editmode

        steps:
          - name: Checkout
            uses: actions/checkout@v2
            with:
                lfs: true
          - name: Cache
            uses: actions/cache@v2
            with:
                path: ${{ matrix.projectPath }}/Library
                key: Library-${{ matrix.projectPath }}
                restore-keys: |
                Library-
          - name: Test
            uses: game-ci/unity-test-runner@v2
            env:
                UNITY_LICENSE: ${{ secrets.UNITY_SERIAL }}
            with:
            projectPath: ${{ matrix.projectPath }}
            testMode: ${{ matrix.testMode }}
            artifactsPath: ${{ matrix.testMode }}-artifacts
            checkName: ${{ matrix.testMode }} Test Results
            coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'
          - name: Upload Test c Artifact
            uses: actions/upload-artifact@v2
            if: always()
            with:
                name: Test results for ${{ matrix.testMode }}
                path: ${{ steps.tests.outputs.artifactsPath }}
          - name: Upload Coverage Coverage Artifact
            uses: actions/upload-artifact@v2
            if: always()
            with:
                name: Coverage results for ${{ matrix.testMode }}
                path: ${{ steps.tests.outputs.coveragePath }}